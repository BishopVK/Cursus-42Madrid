üß† ¬øQu√© es punto fijo?
	- Es una forma de representar n√∫meros con decimales usando solo enteros.
	- Se define cu√°ntos bits se usan para la parte fraccionaria (en tu caso: 8 bits).


üî£ ¬øC√≥mo funciona?
	- Multiplicas el n√∫mero real por 2^8 = 256 y lo guard√°s como entero.
		Ej: 5.25 * 256 = 1344 ‚Üí se guarda como 1344
	- Para obtener el n√∫mero real otra vez, divid√≠s:
		1344 / 256 = 5.25


üìè ¬øQu√© representa el valor interno _value?
	- _value = 1 representa 0.00390625 ‚Üí (1 / 256)
	- Por eso, ++a suma la m√≠nima unidad posible ‚Üí 0.00390625


üßÆ M√©todos clave
	- toFloat() ‚Üí devuelve el n√∫mero real: _value / 256.0f
	- toInt() ‚Üí trunca la parte decimal: _value >> 8
	- setRawBits(int) / getRawBits() ‚Üí trabaja directamente con _value (interno)


‚öôÔ∏è Operadores importantes
	- operator++ suma 1 ‚Üí equivale a sumar 1 / 256 = 0.00390625
	- operator+, -, *, / ‚Üí hacen operaciones con enteros, manteniendo la escala fija
	- Multiplicaci√≥n necesita correcci√≥n: (_value1 * _value2) >> 8
	- Divisi√≥n: (_value1 << 8) / _value2

üõ†Ô∏è Resumen de c√≥mo explicar esto
Usamos punto fijo para representar n√∫meros con decimales de forma m√°s r√°pida y controlada, especialmente cuando no queremos usar float.
La clase Fixed guarda el n√∫mero real multiplicado por 256 (por tener 8 bits fraccionales).
Por eso, cada incremento (++) suma solo 0.00390625, que es la unidad m√≠nima representable.